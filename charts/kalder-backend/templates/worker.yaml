{{- $name := include "kalder-backend.fullname" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kalder-backend.fullname" . }}-worker
  labels:
    {{- include "kalder-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kalder-backend.selectorLabels" . | nindent 6 }}
      role: worker
  template:
    metadata:
      annotations:
        checksum/config-map: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kalder-backend.selectorLabels" . | nindent 8 }}
        role: worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kalder-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: firebase-volume
          secret:
            secretName: firebase-service-account
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["./kalder", "worker"]
          workingDir: /kalder-backend
          envFrom:
            {{- include "kalder-backend.envFrom" . | nindent 12 }}
          volumeMounts:
            - name: firebase-volume
              mountPath: "/kalder-backend/firebase-service-account"
              readOnly: true
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---

{{- if .Values.worker.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "kalder-backend.fullname" . }}-worker
  labels:
    {{- include "kalder-backend.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "kalder-backend.fullname" . }}-worker
  minReplicas: {{ .Values.worker.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.worker.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.worker.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.worker.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
    - type: Object
      object:
        metric:
          name: asynq_queue_latency_seconds
        describedObject:
          apiVersion: /v1
          kind: Namespace
          name: default
        target:
          type: Value
          value: 4
    {{- if .Values.worker.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.worker.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
{{- end }}
